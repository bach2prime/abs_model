package com.commlink.agent.model;
// Generated Sep 25, 2019 11:25:45 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Division generated by hbm2java
 */
@Entity
@Table(name="DIVISION"
    ,schema="AGENT"
)
public class Division  implements java.io.Serializable {


     private int id;
     private String nameEn;
     private String nameBn;
     private String code;
     private Set<Customer> customersForPermanentDivisionId = new HashSet<Customer>(0);
     private Set<TempCustomer> tempCustomersForPermanentDivisionId = new HashSet<TempCustomer>(0);
     private Set<TempCustomer> tempCustomersForPresentDivisionId = new HashSet<TempCustomer>(0);
     private Set<Customer> customersForPresentDivisionId = new HashSet<Customer>(0);
     private Set<District> districts = new HashSet<District>(0);

    public Division() {
    }

	
    public Division(int id, String nameEn, String nameBn) {
        this.id = id;
        this.nameEn = nameEn;
        this.nameBn = nameBn;
    }
    public Division(int id, String nameEn, String nameBn, String code, Set<Customer> customersForPermanentDivisionId, Set<TempCustomer> tempCustomersForPermanentDivisionId, Set<TempCustomer> tempCustomersForPresentDivisionId, Set<Customer> customersForPresentDivisionId, Set<District> districts) {
       this.id = id;
       this.nameEn = nameEn;
       this.nameBn = nameBn;
       this.code = code;
       this.customersForPermanentDivisionId = customersForPermanentDivisionId;
       this.tempCustomersForPermanentDivisionId = tempCustomersForPermanentDivisionId;
       this.tempCustomersForPresentDivisionId = tempCustomersForPresentDivisionId;
       this.customersForPresentDivisionId = customersForPresentDivisionId;
       this.districts = districts;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=8, scale=0)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="NAME_EN", nullable=false, length=100)
    public String getNameEn() {
        return this.nameEn;
    }
    
    public void setNameEn(String nameEn) {
        this.nameEn = nameEn;
    }

    
    @Column(name="NAME_BN", nullable=false, length=100)
    public String getNameBn() {
        return this.nameBn;
    }
    
    public void setNameBn(String nameBn) {
        this.nameBn = nameBn;
    }

    
    @Column(name="CODE", length=20)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="divisionByPermanentDivisionId")
    public Set<Customer> getCustomersForPermanentDivisionId() {
        return this.customersForPermanentDivisionId;
    }
    
    public void setCustomersForPermanentDivisionId(Set<Customer> customersForPermanentDivisionId) {
        this.customersForPermanentDivisionId = customersForPermanentDivisionId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="divisionByPermanentDivisionId")
    public Set<TempCustomer> getTempCustomersForPermanentDivisionId() {
        return this.tempCustomersForPermanentDivisionId;
    }
    
    public void setTempCustomersForPermanentDivisionId(Set<TempCustomer> tempCustomersForPermanentDivisionId) {
        this.tempCustomersForPermanentDivisionId = tempCustomersForPermanentDivisionId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="divisionByPresentDivisionId")
    public Set<TempCustomer> getTempCustomersForPresentDivisionId() {
        return this.tempCustomersForPresentDivisionId;
    }
    
    public void setTempCustomersForPresentDivisionId(Set<TempCustomer> tempCustomersForPresentDivisionId) {
        this.tempCustomersForPresentDivisionId = tempCustomersForPresentDivisionId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="divisionByPresentDivisionId")
    public Set<Customer> getCustomersForPresentDivisionId() {
        return this.customersForPresentDivisionId;
    }
    
    public void setCustomersForPresentDivisionId(Set<Customer> customersForPresentDivisionId) {
        this.customersForPresentDivisionId = customersForPresentDivisionId;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="division")
    public Set<District> getDistricts() {
        return this.districts;
    }
    
    public void setDistricts(Set<District> districts) {
        this.districts = districts;
    }




}


