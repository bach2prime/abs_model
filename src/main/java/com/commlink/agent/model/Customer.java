package com.commlink.agent.model;
// Generated Sep 25, 2019 11:25:45 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name="CUSTOMER"
    ,schema="AGENT"
)
public class Customer  implements java.io.Serializable {


     private int id;
     private Organization organization;
     private Division divisionByPermanentDivisionId;
     private Division divisionByPresentDivisionId;
     private District districtByPresentDistrictId;
     private District districtByPermanentDistrictId;
     private Upazila upazilaByPresentUpazilaId;
     private Upazila upazilaByPermanentUpazilaId;
     private String firstName;
     private String middleName;
     private String lastName;
     private Date dob;
     private boolean isDeleted;
     private String createdBy;
     private Date creationDate;
     private String modifiedBy;
     private Date modificationDate;
     private String homeBranch;
     private Integer status;
     private String fatherName;
     private String motherName;
     private String spouseName;
     private String tin;
     private String nid;
     private String employeeId;
     private String email;
     private String phone;
     private String sourceOfFund;
     private String presentPostCode;
     private String permanentPostCode;
     private String presentVillage;
     private String nationality;
     private String occupation;
     private String designation;
     private String monthlyIncome;
     private String photoUrl;
     private String signatureUrl;
     private Integer currency;
     private Integer gender;
     private Integer maritalStatus;
     private Integer residenceStatus;
     private Set<UserInfo> userInfos = new HashSet<UserInfo>(0);
     private Set<AgentDetail> agentDetails = new HashSet<AgentDetail>(0);
     private Set<CustomerProduct> customerProducts = new HashSet<CustomerProduct>(0);
     private Set<AccountCustomer> accountCustomers = new HashSet<AccountCustomer>(0);

    public Customer() {
    }

	
    public Customer(int id, String firstName, String lastName, boolean isDeleted) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.isDeleted = isDeleted;
    }
    public Customer(int id, Organization organization, Division divisionByPermanentDivisionId, Division divisionByPresentDivisionId, District districtByPresentDistrictId, District districtByPermanentDistrictId, Upazila upazilaByPresentUpazilaId, Upazila upazilaByPermanentUpazilaId, String firstName, String middleName, String lastName, Date dob, boolean isDeleted, String createdBy, Date creationDate, String modifiedBy, Date modificationDate, String homeBranch, Integer status, String fatherName, String motherName, String spouseName, String tin, String nid, String employeeId, String email, String phone, String sourceOfFund, String presentPostCode, String permanentPostCode, String presentVillage, String nationality, String occupation, String designation, String monthlyIncome, String photoUrl, String signatureUrl, Integer currency, Integer gender, Integer maritalStatus, Integer residenceStatus, Set<UserInfo> userInfos, Set<AgentDetail> agentDetails, Set<CustomerProduct> customerProducts, Set<AccountCustomer> accountCustomers) {
       this.id = id;
       this.organization = organization;
       this.divisionByPermanentDivisionId = divisionByPermanentDivisionId;
       this.divisionByPresentDivisionId = divisionByPresentDivisionId;
       this.districtByPresentDistrictId = districtByPresentDistrictId;
       this.districtByPermanentDistrictId = districtByPermanentDistrictId;
       this.upazilaByPresentUpazilaId = upazilaByPresentUpazilaId;
       this.upazilaByPermanentUpazilaId = upazilaByPermanentUpazilaId;
       this.firstName = firstName;
       this.middleName = middleName;
       this.lastName = lastName;
       this.dob = dob;
       this.isDeleted = isDeleted;
       this.createdBy = createdBy;
       this.creationDate = creationDate;
       this.modifiedBy = modifiedBy;
       this.modificationDate = modificationDate;
       this.homeBranch = homeBranch;
       this.status = status;
       this.fatherName = fatherName;
       this.motherName = motherName;
       this.spouseName = spouseName;
       this.tin = tin;
       this.nid = nid;
       this.employeeId = employeeId;
       this.email = email;
       this.phone = phone;
       this.sourceOfFund = sourceOfFund;
       this.presentPostCode = presentPostCode;
       this.permanentPostCode = permanentPostCode;
       this.presentVillage = presentVillage;
       this.nationality = nationality;
       this.occupation = occupation;
       this.designation = designation;
       this.monthlyIncome = monthlyIncome;
       this.photoUrl = photoUrl;
       this.signatureUrl = signatureUrl;
       this.currency = currency;
       this.gender = gender;
       this.maritalStatus = maritalStatus;
       this.residenceStatus = residenceStatus;
       this.userInfos = userInfos;
       this.agentDetails = agentDetails;
       this.customerProducts = customerProducts;
       this.accountCustomers = accountCustomers;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=8, scale=0)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORG_ID")
    public Organization getOrganization() {
        return this.organization;
    }
    
    public void setOrganization(Organization organization) {
        this.organization = organization;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERMANENT_DIVISION_ID")
    public Division getDivisionByPermanentDivisionId() {
        return this.divisionByPermanentDivisionId;
    }
    
    public void setDivisionByPermanentDivisionId(Division divisionByPermanentDivisionId) {
        this.divisionByPermanentDivisionId = divisionByPermanentDivisionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRESENT_DIVISION_ID")
    public Division getDivisionByPresentDivisionId() {
        return this.divisionByPresentDivisionId;
    }
    
    public void setDivisionByPresentDivisionId(Division divisionByPresentDivisionId) {
        this.divisionByPresentDivisionId = divisionByPresentDivisionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRESENT_DISTRICT_ID")
    public District getDistrictByPresentDistrictId() {
        return this.districtByPresentDistrictId;
    }
    
    public void setDistrictByPresentDistrictId(District districtByPresentDistrictId) {
        this.districtByPresentDistrictId = districtByPresentDistrictId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERMANENT_DISTRICT_ID")
    public District getDistrictByPermanentDistrictId() {
        return this.districtByPermanentDistrictId;
    }
    
    public void setDistrictByPermanentDistrictId(District districtByPermanentDistrictId) {
        this.districtByPermanentDistrictId = districtByPermanentDistrictId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PRESENT_UPAZILA_ID")
    public Upazila getUpazilaByPresentUpazilaId() {
        return this.upazilaByPresentUpazilaId;
    }
    
    public void setUpazilaByPresentUpazilaId(Upazila upazilaByPresentUpazilaId) {
        this.upazilaByPresentUpazilaId = upazilaByPresentUpazilaId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERMANENT_UPAZILA_ID")
    public Upazila getUpazilaByPermanentUpazilaId() {
        return this.upazilaByPermanentUpazilaId;
    }
    
    public void setUpazilaByPermanentUpazilaId(Upazila upazilaByPermanentUpazilaId) {
        this.upazilaByPermanentUpazilaId = upazilaByPermanentUpazilaId;
    }

    
    @Column(name="FIRST_NAME", nullable=false, length=20)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="MIDDLE_NAME", length=20)
    public String getMiddleName() {
        return this.middleName;
    }
    
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    
    @Column(name="LAST_NAME", nullable=false, length=20)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DOB", length=7)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

    
    @Column(name="IS_DELETED", nullable=false, precision=1, scale=0)
    public boolean isIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    
    @Column(name="CREATED_BY", length=20)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATION_DATE")
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    
    @Column(name="MODIFIED_BY", length=20)
    public String getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MODIFICATION_DATE")
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="HOME_BRANCH", length=20)
    public String getHomeBranch() {
        return this.homeBranch;
    }
    
    public void setHomeBranch(String homeBranch) {
        this.homeBranch = homeBranch;
    }

    
    @Column(name="STATUS", precision=8, scale=0)
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }

    
    @Column(name="FATHER_NAME", length=100)
    public String getFatherName() {
        return this.fatherName;
    }
    
    public void setFatherName(String fatherName) {
        this.fatherName = fatherName;
    }

    
    @Column(name="MOTHER_NAME", length=100)
    public String getMotherName() {
        return this.motherName;
    }
    
    public void setMotherName(String motherName) {
        this.motherName = motherName;
    }

    
    @Column(name="SPOUSE_NAME", length=100)
    public String getSpouseName() {
        return this.spouseName;
    }
    
    public void setSpouseName(String spouseName) {
        this.spouseName = spouseName;
    }

    
    @Column(name="TIN", length=100)
    public String getTin() {
        return this.tin;
    }
    
    public void setTin(String tin) {
        this.tin = tin;
    }

    
    @Column(name="NID", length=100)
    public String getNid() {
        return this.nid;
    }
    
    public void setNid(String nid) {
        this.nid = nid;
    }

    
    @Column(name="EMPLOYEE_ID", length=100)
    public String getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
    }

    
    @Column(name="EMAIL", length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="PHONE", length=100)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="SOURCE_OF_FUND", length=100)
    public String getSourceOfFund() {
        return this.sourceOfFund;
    }
    
    public void setSourceOfFund(String sourceOfFund) {
        this.sourceOfFund = sourceOfFund;
    }

    
    @Column(name="PRESENT_POST_CODE", length=100)
    public String getPresentPostCode() {
        return this.presentPostCode;
    }
    
    public void setPresentPostCode(String presentPostCode) {
        this.presentPostCode = presentPostCode;
    }

    
    @Column(name="PERMANENT_POST_CODE", length=100)
    public String getPermanentPostCode() {
        return this.permanentPostCode;
    }
    
    public void setPermanentPostCode(String permanentPostCode) {
        this.permanentPostCode = permanentPostCode;
    }

    
    @Column(name="PRESENT_VILLAGE", length=100)
    public String getPresentVillage() {
        return this.presentVillage;
    }
    
    public void setPresentVillage(String presentVillage) {
        this.presentVillage = presentVillage;
    }

    
    @Column(name="NATIONALITY", length=100)
    public String getNationality() {
        return this.nationality;
    }
    
    public void setNationality(String nationality) {
        this.nationality = nationality;
    }

    
    @Column(name="OCCUPATION", length=100)
    public String getOccupation() {
        return this.occupation;
    }
    
    public void setOccupation(String occupation) {
        this.occupation = occupation;
    }

    
    @Column(name="DESIGNATION", length=100)
    public String getDesignation() {
        return this.designation;
    }
    
    public void setDesignation(String designation) {
        this.designation = designation;
    }

    
    @Column(name="MONTHLY_INCOME", length=100)
    public String getMonthlyIncome() {
        return this.monthlyIncome;
    }
    
    public void setMonthlyIncome(String monthlyIncome) {
        this.monthlyIncome = monthlyIncome;
    }

    
    @Column(name="PHOTO_URL", length=100)
    public String getPhotoUrl() {
        return this.photoUrl;
    }
    
    public void setPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
    }

    
    @Column(name="SIGNATURE_URL", length=100)
    public String getSignatureUrl() {
        return this.signatureUrl;
    }
    
    public void setSignatureUrl(String signatureUrl) {
        this.signatureUrl = signatureUrl;
    }

    
    @Column(name="CURRENCY", precision=8, scale=0)
    public Integer getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Integer currency) {
        this.currency = currency;
    }

    
    @Column(name="GENDER", precision=8, scale=0)
    public Integer getGender() {
        return this.gender;
    }
    
    public void setGender(Integer gender) {
        this.gender = gender;
    }

    
    @Column(name="MARITAL_STATUS", precision=8, scale=0)
    public Integer getMaritalStatus() {
        return this.maritalStatus;
    }
    
    public void setMaritalStatus(Integer maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    
    @Column(name="RESIDENCE_STATUS", precision=8, scale=0)
    public Integer getResidenceStatus() {
        return this.residenceStatus;
    }
    
    public void setResidenceStatus(Integer residenceStatus) {
        this.residenceStatus = residenceStatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<UserInfo> getUserInfos() {
        return this.userInfos;
    }
    
    public void setUserInfos(Set<UserInfo> userInfos) {
        this.userInfos = userInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<AgentDetail> getAgentDetails() {
        return this.agentDetails;
    }
    
    public void setAgentDetails(Set<AgentDetail> agentDetails) {
        this.agentDetails = agentDetails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<CustomerProduct> getCustomerProducts() {
        return this.customerProducts;
    }
    
    public void setCustomerProducts(Set<CustomerProduct> customerProducts) {
        this.customerProducts = customerProducts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<AccountCustomer> getAccountCustomers() {
        return this.accountCustomers;
    }
    
    public void setAccountCustomers(Set<AccountCustomer> accountCustomers) {
        this.accountCustomers = accountCustomers;
    }




}


