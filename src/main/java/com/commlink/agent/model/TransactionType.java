package com.commlink.agent.model;
// Generated Sep 25, 2019 11:25:45 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TransactionType generated by hbm2java
 */
@Entity
@Table(name="TRANSACTION_TYPE"
    ,schema="AGENT"
    , uniqueConstraints = @UniqueConstraint(columnNames="CODE") 
)
public class TransactionType  implements java.io.Serializable {


     private int id;
     private boolean isDeleted;
     private String createdBy;
     private Date creationDate;
     private Date modificationDate;
     private String modifiedBy;
     private String name;
     private Short multipleDebitEntries;
     private Short multipleCreditEntries;
     private short code;
     private Set<Commission> commissions = new HashSet<Commission>(0);
     private Set<Transaction> transactions = new HashSet<Transaction>(0);

    public TransactionType() {
    }

	
    public TransactionType(int id, boolean isDeleted, short code) {
        this.id = id;
        this.isDeleted = isDeleted;
        this.code = code;
    }
    public TransactionType(int id, boolean isDeleted, String createdBy, Date creationDate, Date modificationDate, String modifiedBy, String name, Short multipleDebitEntries, Short multipleCreditEntries, short code, Set<Commission> commissions, Set<Transaction> transactions) {
       this.id = id;
       this.isDeleted = isDeleted;
       this.createdBy = createdBy;
       this.creationDate = creationDate;
       this.modificationDate = modificationDate;
       this.modifiedBy = modifiedBy;
       this.name = name;
       this.multipleDebitEntries = multipleDebitEntries;
       this.multipleCreditEntries = multipleCreditEntries;
       this.code = code;
       this.commissions = commissions;
       this.transactions = transactions;
    }
   
    @Id 

    
    @Column(name="ID", unique=true, nullable=false, precision=8, scale=0)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="IS_DELETED", nullable=false, precision=1, scale=0)
    public boolean isIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    
    @Column(name="CREATED_BY", length=20)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATION_DATE")
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MODIFICATION_DATE")
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="MODIFIED_BY", length=20)
    public String getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    
    @Column(name="NAME", length=20)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="MULTIPLE_DEBIT_ENTRIES", precision=4, scale=0)
    public Short getMultipleDebitEntries() {
        return this.multipleDebitEntries;
    }
    
    public void setMultipleDebitEntries(Short multipleDebitEntries) {
        this.multipleDebitEntries = multipleDebitEntries;
    }

    
    @Column(name="MULTIPLE_CREDIT_ENTRIES", precision=4, scale=0)
    public Short getMultipleCreditEntries() {
        return this.multipleCreditEntries;
    }
    
    public void setMultipleCreditEntries(Short multipleCreditEntries) {
        this.multipleCreditEntries = multipleCreditEntries;
    }

    
    @Column(name="CODE", unique=true, nullable=false, precision=4, scale=0)
    public short getCode() {
        return this.code;
    }
    
    public void setCode(short code) {
        this.code = code;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactionType")
    public Set<Commission> getCommissions() {
        return this.commissions;
    }
    
    public void setCommissions(Set<Commission> commissions) {
        this.commissions = commissions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transactionType")
    public Set<Transaction> getTransactions() {
        return this.transactions;
    }
    
    public void setTransactions(Set<Transaction> transactions) {
        this.transactions = transactions;
    }




}


